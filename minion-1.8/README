If you have downloaded a binary for your OS, the minion binary will be in the
'bin' directory. 

the "docs" directory contains a full manual for Minion. 
The "benchmarks" directory contains a range of example programs.
The "generators" directory contains a number of generators, these are
in general poorly documented.


If you want to build minion from source, read on!

Welcome to the Minion source!

The minimum verson of CMake you'll need is 2.4.7.

First, create a directory to do the build in, e.g.

mkdir bin

Then change to that directory. Now run CMake to configure Minion:

cmake ..

This assumes that you've created the build directory in the Minion directory;
the argument to CMake is the directory that contains the Minion distribution.

This will look for the location of your compiler, and a few system libraries.
If you ever add additional constraints, or add or remove files, then
you should re-run cmake. The Makefile is generated by CMake; it is safe to
delete it.

After that, you can compile Minion by doing:

make minion

which should produce the binary "minion".

If you want to build the debug version, re-run cmake like

cmake -DDEBUG=1 ..

and then type

make minion

again. This should produce the "minion-debug" binary. The debug version is much
slower but has a large amount of internal checks. It should be used if you are
unsure / worried about the results Minion produces, or it crashes.

Note that CMake caches your configuration between runs, i.e. just running

cmake ..

after having built the debug version will again produce Makefiles for the debug
version. To turn debugging off, run

cmake -DDEBUG=0 ..

To test your Minion installation, you can use the "test-quick", "test", and
"test-slow" Makefile targets.

To clean all generated files, simply delete the directory you did the build in.
