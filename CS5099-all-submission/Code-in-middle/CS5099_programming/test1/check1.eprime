language ESSENCE' 1.0

given n: int
given squareType: matrix indexed by [int(1..n), int(1..2*n)] of int(0..2*n)
$given clues: matrix indexed by [int(1..2*n), int(1..n)] of int(0..2*n)

find solutionBoard: matrix indexed by [int(1..2*n), int(1..2*n)] of int(0..1)

such that


	$forAll row:int(1..n).
	$	forAll col:int(1..2*n).
	$		((sum i: int(1..2*n).solutionBoard[i,col])=2)->(squareType[row,col]=1)

  forAll row:int(1..n).
		forAll col:int(1..2*n).
			(squareType[row,col]=1)->((sum i: int(1..2*n).solutionBoard[i,col])=1),

  forAll row:int(1..n).
    forAll col:int(1..2*n).
      (squareType[row,col]=0)->((sum i: int(1..2*n).solutionBoard[i,col])=0)
