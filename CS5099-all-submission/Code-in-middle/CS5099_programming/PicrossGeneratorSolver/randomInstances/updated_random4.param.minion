MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 0
# CSE_active_eliminated_expressions = 0
# CSE_active_total_size = 0
**VARIABLES**
DISCRETE topIndexMatrix_00000_00000 #
{1..2}
DISCRETE topIndexMatrix_00000_00003 #
{1..2}
DISCRETE leftIndexMatrix_00000_00000 #
{1..2}
DISCRETE leftIndexMatrix_00003_00000 #
{1..4}
DISCRETE solutionBoard_00000_00000 #
{0..1}
DISCRETE solutionBoard_00000_00003 #
{0..1}
DISCRETE solutionBoard_00003_00000 #
{0..1}
DISCRETE solutionBoard_00003_00003 #
{0..1}
DISCRETE aux34 #(2 + leftIndexMatrix_00000_00000)
{3..4}
DISCRETE aux35 #(topIndexMatrix_00000_00003 + 1)
{2..3}
DISCRETE aux37 #(topIndexMatrix_00000_00003 + 2)
{3..4}
BOOL aux38 #(topIndexMatrix_00000_00000-1)
BOOL aux45 #(-1 + leftIndexMatrix_00000_00000)
DISCRETE aux48 #(leftIndexMatrix_00003_00000-1)
{0..3}
BOOL aux50 #(topIndexMatrix_00000_00003-1)
DISCRETE aux54 #(topIndexMatrix_00000_00000 + 1)
{2..3}
DISCRETE aux56 #(topIndexMatrix_00000_00000 + 2)
{3..4}
DISCRETE aux57 #(1 + leftIndexMatrix_00000_00000)
{2..3}
**TUPLELIST**
topMatrix 9 8
3 1 2 3 1 4 2 1 
2 1 5 2 3 1 5 1 
1 5 1 1 4 1 3 5 
1 1 3 1 1 4 0 1 
1 1 0 3 0 0 0 0 
0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
**VARIABLES**
ALIAS topMatrix[9,8]=[[3, 1, 2, 3, 1, 4, 2, 1], [2, 1, 5, 2, 3, 1, 5, 1], [1, 5, 1, 1, 4, 1, 3, 5], [1, 1, 3, 1, 1, 4, 0, 1], [1, 1, 0, 3, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
**TUPLELIST**
leftMatrix 17 4
3 1 0 0 
1 3 1 0 
2 1 2 0 
1 0 0 0 
1 1 0 0 
3 1 0 0 
6 0 0 0 
3 3 0 0 
3 1 1 0 
2 3 0 0 
2 1 2 0 
3 1 0 0 
1 1 1 1 
1 4 0 0 
1 2 2 0 
6 0 0 0 
3 1 0 0 
**VARIABLES**
ALIAS leftMatrix[17,4]=[[3, 1, 0, 0], [1, 3, 1, 0], [2, 1, 2, 0], [1, 0, 0, 0], [1, 1, 0, 0], [3, 1, 0, 0], [6, 0, 0, 0], [3, 3, 0, 0], [3, 1, 1, 0], [2, 3, 0, 0], [2, 1, 2, 0], [3, 1, 0, 0], [1, 1, 1, 1], [1, 4, 0, 0], [1, 2, 2, 0], [6, 0, 0, 0], [3, 1, 0, 0]]
**SEARCH**
PRINT[[topIndexMatrix_00000_00000],[topIndexMatrix_00000_00003],[leftIndexMatrix_00000_00000],[leftIndexMatrix_00003_00000],[solutionBoard_00000_00000],[solutionBoard_00000_00003],[solutionBoard_00003_00000],[solutionBoard_00003_00003]]
VARORDER STATIC [topIndexMatrix_00000_00000, 1, 1, topIndexMatrix_00000_00003, 2, 5, 2, 1, 8, 3, 6, 6, 7, 10, 7, 3, 11, 5, 13, 10, 11, 12, 14, 10, 13, 11, 15, 12, 16, 14, 0, 16, 15, 14, 0, 15, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, leftIndexMatrix_00000_00000, 8, 0, 0, 1, 3, 7, 0, 1, 4, 7, 0, leftIndexMatrix_00003_00000, 0, 0, 0, 2, 6, 0, 0, 2, 6, 0, 0, 2, 0, 0, 0, 1, 5, 0, 0, 1, 5, 7, 0, 3, 6, 0, 0, 1, 5, 7, 0, 4, 8, 0, 0, 1, 3, 5, 8, 2, 5, 0, 0, 1, 3, 6, 0, 3, 0, 0, 0, 2, 6, 0, 0, solutionBoard_00000_00000, 1, 1, solutionBoard_00000_00003, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, solutionBoard_00003_00000, 0, 0, solutionBoard_00003_00003, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0]
VARORDER AUX [topIndexMatrix_00000_00000,topIndexMatrix_00000_00003,leftIndexMatrix_00000_00000,leftIndexMatrix_00003_00000,solutionBoard_00000_00000,solutionBoard_00000_00003,solutionBoard_00003_00000,solutionBoard_00003_00003,aux34,aux35,aux37,aux38,aux45,aux48,aux50,aux54,aux56,aux57]
**CONSTRAINTS**
watchelement_undefzero([solutionBoard_00000_00000, 1], aux38, 1)
watchelement_undefzero([1, 1, solutionBoard_00003_00000], topIndexMatrix_00000_00000, 1)
watchelement_undefzero([solutionBoard_00000_00003, 1, 1], topIndexMatrix_00000_00003, 1)
watchelement_undefzero([solutionBoard_00000_00000, 1, 1], topIndexMatrix_00000_00000, 1)
watchelement_undefzero([1, 1, solutionBoard_00003_00003], topIndexMatrix_00000_00003, 1)
watchelement_undefzero([solutionBoard_00000_00000, 1], aux45, 1)
watchelement_undefzero([solutionBoard_00003_00000, 0, 0, solutionBoard_00003_00003], aux48, 1)
watchelement_undefzero([solutionBoard_00000_00003, 1], aux50, 1)
watchelement_undefzero([1, 1, solutionBoard_00000_00003], leftIndexMatrix_00000_00000, 1)
watchelement_undefzero([solutionBoard_00000_00000, 1, 1], leftIndexMatrix_00000_00000, 1)
sumleq([2,leftIndexMatrix_00000_00000],aux34)
sumgeq([2,leftIndexMatrix_00000_00000],aux34)
sumleq([topIndexMatrix_00000_00003,1],aux35)
sumgeq([topIndexMatrix_00000_00003,1],aux35)
sumleq([solutionBoard_00000_00000,solutionBoard_00000_00003],1)
sumgeq([solutionBoard_00000_00000,solutionBoard_00000_00003],1)
sumleq([topIndexMatrix_00000_00003,2],aux37)
sumgeq([topIndexMatrix_00000_00003,2],aux37)
sumleq([topIndexMatrix_00000_00000,-1],aux38)
sumgeq([topIndexMatrix_00000_00000,-1],aux38)
sumleq([solutionBoard_00000_00000,solutionBoard_00003_00000],1)
sumgeq([solutionBoard_00000_00000,solutionBoard_00003_00000],1)
sumleq([-1,leftIndexMatrix_00000_00000],aux45)
sumgeq([-1,leftIndexMatrix_00000_00000],aux45)
sumleq([solutionBoard_00003_00000,solutionBoard_00003_00003],1)
sumgeq([solutionBoard_00003_00000,solutionBoard_00003_00003],1)
sumleq([leftIndexMatrix_00003_00000,-1],aux48)
sumgeq([leftIndexMatrix_00003_00000,-1],aux48)
sumleq([topIndexMatrix_00000_00003,-1],aux50)
sumgeq([topIndexMatrix_00000_00003,-1],aux50)
sumleq([solutionBoard_00000_00003,solutionBoard_00003_00003],1)
sumgeq([solutionBoard_00000_00003,solutionBoard_00003_00003],1)
sumleq([topIndexMatrix_00000_00000,1],aux54)
sumgeq([topIndexMatrix_00000_00000,1],aux54)
sumleq([topIndexMatrix_00000_00000,2],aux56)
sumgeq([topIndexMatrix_00000_00000,2],aux56)
sumleq([1,leftIndexMatrix_00000_00000],aux57)
sumgeq([1,leftIndexMatrix_00000_00000],aux57)
**EOF**
