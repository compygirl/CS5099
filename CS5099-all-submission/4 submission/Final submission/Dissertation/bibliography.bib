@article{Apt2003a,
abstract = {Scheduling, vehicle routing and timetabling are all examples of constraint problems, and methods to solve them rely on the idea of constraint propagation and search. This book meets the need for a modern, multidisciplinary introduction to the field that covers foundations and applications. Written by Krzysztof Apt, an authority on the subject, it will be welcomed by graduate students and professionals. With the insertion of constraint techniques into programming environments, new developments have accelerated the solution process. Constraint programming combines ideas from artificial intelligence, programming languages, databases, and operational research. Constraints are everywhere: most computational problems can be described in terms of restrictions imposed on the set of possible solutions, and constraint programming is a problem-solving technique that works by incorporating those restrictions in a programming environment. It draws on methods from combinatorial optimization and artificial intelligence, and has been successfully applied in a number of fields from scheduling, computational biology, finance, electrical engineering and operations research through to numerical analysis. This textbook for upper-division students provides a thorough and structured account of the main aspects of constraint programming. The author provides many worked examples that illustrate the usefulness and versatility of this approach to programming, as well as many exercises throughout the book that illustrate techniques, test skills and extend the text. Pointers to current research, extensive historical and bibliographic notes, and a comprehensive list of references will also be valuable to professionals in computer science and artificial intelligence.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Apt, Krzysztof R},
doi = {10.2277/0521825830},
eprint = {arXiv:1011.1669v3},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Apt - 2003 - Principles of Constraint Programming.pdf:pdf},
isbn = {0521825830},
issn = {1098-6596},
journal = {Annals of Physics},
pages = {420},
pmid = {25246403},
title = {{Principles of Constraint Programming}},
url = {http://books.google.pt/books?id=1e7Ib04fZAcC{\%}5Cnhttp://books.google.com/books?hl=en{\&}lr={\&}id=1e7Ib04fZAcC{\&}oi=fnd{\&}pg=PR11{\&}dq=Principles+of+constraint+programming{\&}ots=DSTROv6GhB{\&}sig=0YtJALBjQjmdXSRXnrSc16Ler7E{\%}5Cnhttp://books.google.com/books?hl=en{\&}lr={\&}id=1e7},
year = {2003}
}


@misc{nonogram_with_multiple_solutions,
author = {Tang, Mei-Huei and Wasng, Wen-Li},
title = {Simulated Annealing Approach to Solve Nonogram Puzzles with Multiple Solutions},
howpublished = {\url{http://ac.els-cdn.com/S1877050914013015/1-s2.0-S1877050914013015-main.pdf?_tid=ebb57068-836e-11e7-a358-00000aacb35e&acdnat=1502989988_b75a1c16427c3ead3395e24b30d39ec8}},
month = {},
year = {2014},
note = {(Accessed on 08/17/2017)}
}
@article{savilerow_manual,
author = {Nightingale, Peter},
file = {:Users/aigera/Desktop/Constraint Programming/savilerow-1.6.4-mac/savilerow-manual.pdf:pdf},
pages = {1--9},
title = {{Savile Row Manual 1.6.4}}
}


@misc{SavileRow:online,
author = {},
title = {Savile Row constraint modelling assistant},
howpublished = {\url{http://savilerow.cs.st-andrews.ac.uk/}},
month = {},
year = {},
note = {(Accessed on 08/16/2017)}
}

@article{all_diff_st-andr,
abstract = {The AllDifferent constraint is a crucial component of any constraint toolkit, language or solver, since it is very widely used in a variety of constraint models. The literature contains many different versions of this constraint, which trade strength of inference against computational cost. In this paper, we focus on the highest strength of inference, enforcing a property known as generalised arc consistency (GAC). This work is an analytical survey of optimizations of the main algorithm for GAC for the AllDifferent constraint. We evaluate empirically a number of key techniques from the literature. We also report important implementation details of those techniques, which have often not been described in published papers. We pay particular attention to improving incrementality by exploiting the strongly-connected components discovered during the standard propagation process, since this has not been detailed before. Our empirical work represents by far the most extensive set of experiments on variants of GAC algorithms for AllDifferent. Overall, the best combination of optimizations gives a mean speedup of 168 times over the same implementation without the optimizations.},
author = {{Ian P. Gent â, Ian Miguel}, Peter Nightingale},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Ian P. Gent â, Ian Miguel - 2008 - Generalised arc consistency for the AllDifferent constraint An empirical survey.pdf:pdf},
title = {{Generalised arc consistency for the AllDifferent constraint: An empirical survey}},
url = {http://ac.els-cdn.com/S0004370208001410/1-s2.0-S0004370208001410-main.pdf?{\_}tid=0b00b040-7f78-11e7-81fe-00000aacb361{\&}acdnat=1502554103{\_}301d1cdc74e897f68921606c06470635},
year = {2008}
}

@article{minion,
abstract = {We present Minion, a new constraint solver. Empirical results on standard benchmarks show orders of magnitude performance gains over state-of-the-art constraint toolkits. These gains increase with problem size-MINION delivers scalable constraint solving. MINION is a general-purpose constraint solver, with an expressive input language based on the common constraint modelling device of matrix models. Focussing on matrix models supports a highly-optimised implementation, exploiting the properties of modern processors. This contrasts with current constraint toolkits, which, in order to provide ever more modelling and solving options, have become progressively more complex at the cost of both performance and usability. MINION is a black box from the user point of view, deliberately providing few options. This, combined with its raw speed, makes MINION a substantial step towards Puget's 'Model and Run' constraint solving paradigm. {\textcopyright} 2006 The authors.},
author = {Gent, Ian P and Jefferson, Christopher and Miguel, Ian},
doi = {http://dl.acm.org/citation.cfm?id=1567016.1567043},
file = {:Users/aigera/Downloads/chris2{\_}minion.pdf:pdf},
isbn = {9781586036423},
issn = {09226389},
journal = {The 17th European Conference on Artificial Intelligence},
pages = {98--102},
title = {{Minion: A Fast Scalable Constraint Solver}},
volume = {141},
year = {2006}
}

@article{nonogram_good,
author = {Zavistanavi{\v{c}}ius, RamÅ«nas},
file = {:Users/aigera/Documents/CS5099/literature review/papers/games/Nanogram{\_}solving{\_}algorithms{\_}analysis{\_}and{\_}implementation{\_}for{\_}augmented{\_}reality{\_}system.pdf:pdf},
pages = {54},
title = {{Nonogram solving algorithms analysis and implementation for augmented reality system}},
url = {http://vddb.library.lt/fedora/get/LT-eLABa-0001:E.02{~}2012{~}D{\_}20131104{\_}111220-04913/DS.005.1.01.ETD},
year = {2012}
}

@article{combination,
abstract = {Constraint Programming offers a powerful means of solving a wide variety of combinatorial problems. We have used this powerful paradigm to create a successful computer game called Combination. Combination is an application for the iPhone and iPod touch. It has been on sale internationally through the iTunes store since December, 2008 and received a number of positive reviews. In this paper we explain how all the levels of Combination were generated, checked for correctness and rated for difficulty completely automatically through the use of constraints. We go on to evaluate this method of creation with the use of a human evaluation. This showed that fun, immersing computer games can be created with constraint programming.},
author = {Jefferson, Christopher and Moncur, Wendy and Petrie, Karen E.},
doi = {10.1145/1982185.1982383},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Jefferson, Moncur, Petrie - Unknown - Combination Automated Generation of Puzzles with Constraints.pdf:pdf},
isbn = {9781450301138},
journal = {Proceedings of the 2011 ACM Symposium on Applied Computing - SAC '11},
pages = {907},
title = {{Combination}},
url = {http://portal.acm.org/citation.cfm?doid=1982185.1982383},
year = {2011}
}

@article{hanbook_cp,
author = {Rossi, F and {Van Beek}, P and Elsevier, T Walsh},
file = {:Users/aigera/Documents/CS5099/literature review/books/CP{\_}Handbook-20060315-final.pdf:pdf},
title = {{Handbook of Constraint Programming}},
url = {http://cswww.essex.ac.uk/CSP/papers/CP{\_}Handbook-20060315-final.pdf},
year = {2006}
}

@article{savile_row_paper,
abstract = {When solving a problem using constraint programming, constraint modelling is widely acknowledged as an important and difficult task. Even a constraint modelling expert may explore many models and spend considerable time modelling a single problem. Therefore any automated assistance in the area of constraint modelling is valuable. Common sub-expression elimination (CSE) is a type of constraint reformulation that has proved to be useful on a range of problems. In this paper we demonstrate the value of an extension of CSE called Associative-Commutative CSE (AC-CSE). This technique exploits the proper-ties of associativity and commutativity of binary operators, for example in sum constraints. We present a new algorithm, X-CSE, that is able to choose from a larger palette of common subexpressions than previous approaches. We demon-strate substantial gains in performance using X-CSE. For example on BIBD we observed speed increases of more than 20 times compared to a standard model and that using X-CSE outperforms a sophisticated model from the literature. For Killer Sudoku we found that X-CSE can render some apparently difficult in-stances almost trivial to solve, and we observe speed increases up to 350 times. For BIBD and Killer Sudoku the common subexpressions are not present in the initial model: an important part of our methodology is reformulations at the pre-processing stage, to create the common subexpressions for X-CSE to exploit. In summary we show that X-CSE, combined with preprocessing and other reformu-lations, is a powerful technique for automated modelling of problems containing associative and commutative constraints.},
author = {Nightingale, Peter and Akg{\"{u}}n, Ozg{\"{u}}r and Gent, Ian P and Jefferson, Christopher and Miguel, Ian},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Nightingale et al. - Unknown - LNCS 8656 - Automatically Improving Constraint Models in Savile Row through Associative-Commutative Commo.pdf:pdf},
pages = {590--605},
title = {{Automatically Improving Constraint Models in Savile Row through Associative - Commutative Common Subexpression Elimination}},
url = {http://download.springer.com/static/pdf/221/chp{\%}253A10.1007{\%}252F978-3-319-10428-7{\_}43.pdf?originUrl=http{\%}3A{\%}2F{\%}2Flink.springer.com{\%}2Fchapter{\%}2F10.1007{\%}2F978-3-319-10428-7{\_}43{\&}token2=exp=1496344399{~}acl={\%}2Fstatic{\%}2Fpdf{\%}2F221{\%}2Fchp{\%}25253A10.1007{\%}25252F978-3-31},
year = {2014}
}

@article{industry,
abstract = {Many network design problems arising in areas as diverse as VLSI circuit design, QoS routing, traffic engineering, and computational sustainability require clients to be connected to a facility under path-length constraints and budget limits. These problems can be modelled as Rooted Distance-Constrained Minimum Spanning-Tree Problem (RDCMST), which is NP-hard. An inherent feature of these networks is that they are vulnerable to a failure. Therefore, it is often important to ensure that all clients are connected to two or more facilities via edge-disjoint paths. We call this problem the Edge-disjoint RDCMST (ERDCMST). Previous works on RDCMST have focused on dedicated algorithms which are hard to extend with side constraints, and therefore these algorithms cannot be extended for solving ERDCMST. We present a constraint-based local search algorithm for which we present two efficient local move operators and an incremental way of maintaining objective function. Our local search algorithm can easily be extended and it is able to solve both problems. The effectiveness of our approach is demonstrated by experimenting with a set of problem instances taken from real-world passive optical network deployments in Ireland, the UK, and Italy. We compare our approach with existing exact and heuristic approaches. Results show that our approach is superior to both of the latter in terms of scalability and its anytime behaviour.},
author = {{Alejandro Arbelaez, Deepak Mehta, Barry O'Sullivan}, Luis Quesada},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Alejandro Arbelaez, Deepak Mehta, Barry O'Sullivan - 2015 - A Constraint-Based Local Search for Edge Disjoint Rooted Distance-Constrai.pdf:pdf},
pages = {31--46},
title = {{A Constraint-Based Local Search for Edge Disjoint Rooted Distance-Constrained Minimum Spanning Tree Problem}},
url = {https://link.springer.com/content/pdf/10.1007{\%}2F978-3-319-18008-3.pdf},
year = {2015}
}

@article{nonogram_reinforcement,
abstract = {We study solvers of nonogram puzzles, which are good examples of constraint-satisfaction problems. Given an optimal solving module for solving a given line, we compare performance of three algorithmic solvers used to select the order in which to solve lines with a reinforcement-learning-based solver. The reinforcement-learning (RL) solver uses a measure of reduction of distance to goal as a reward. We compare two methods for storing qualities (Q values) of state-action pairs, a lookup table and a connectionist function approximator. We find that RL solvers learn near-optimal solutions that also outperform a heuristic solver based on the explicit, general rules often given to nonogram players. Only RL solvers that use a connectionist function approximator generalize their knowledge to generate good solutions on about half of unseen problems; RL solvers based on lookup tables generalize to none of these untrained problems.},
author = {Dandurand, Fr{\'{e}}d{\'{e}}ric and Cousineau, Denis and Shultz, Thomas R},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Dandurand, Cousineau, Shultz - Unknown - Solving nonogram puzzles by reinforcement learning.pdf:pdf},
keywords = {Nonograms,SDCC,distance-based reward,problem solving,reinforcement learning},
title = {{Solving nonogram puzzles by reinforcement learning}},
url = {https://mindmodeling.org/cogsci2012/papers/0258/paper0258.pdf}
}

@article{Sudoku_as_CP,
abstract = {Constraint programming has finally reached the masses, thou- sands of newspaper readers (especially in the UK) are solving their daily constraint problem. They apply complex propagation schemes with names like âX-Wingâ and âSwordfishâ to find solutions of a rather simple looking puzzle called Sudoku. Unfortunately, they are not aware that this is constraint programming. In this paper we try to understand the puzzle from a constraint point of view, show models to solve and generate puz- zles and give an objective measure of the difficulty of a puzzle instance. This measure seems to correlate well with grades (e.g. easy to hard) that are assigned to problem instances for the general public. We also show how the model can be strengthened with redundant constraints and how these can be implemented using bipartite matching and flow algorithms. 1},
author = {{Helmut Simonis}},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Helmut Simonis - 2005 - Sudoku as a Constraint Problem.pdf:pdf},
journal = {Fourth International Workshop Sitges},
pages = {13-- 27},
title = {{Sudoku as a Constraint Problem}},
url = {https://pdfs.semanticscholar.org/b5f8/380bb6149ec2f4e5bf4f5ab7551ca9b3c37b.pdf{\#}page=21},
year = {2005}
}

%-------------------------------------------------------------------------------------------
% cleared up tp here |^^|
%-------------------------------------------------------------------------------------------

@article{Dandurand2012,
author = {Dandurand, Fr{\'{e}}d{\'{e}}ric and Canada, Q C H V and Cousineau, Denis and Lussier, Jean Jacques and Shultz, Thomas R},
file = {:Users/aigera/Documents/CS5099/literature review/papers/games/Solving nonogram puzzles by reinforcement learning.pdf:pdf},
keywords = {a grey color,and the,at the beginning,cells is,distance-based reward,empty cell,learning,nonograms,often portrayed visually by,problem solving,reinforcement,sdcc,the state of all,unknown},
pages = {1452--1457},
title = {{Solving nonogram puzzles by reinforcement learning Nonogram puzzles}},
year = {2012}
}
@article{Zavistanavicius2012,
author = {Zavistanavi{\v{c}}ius, Ramūnas},
file = {:Users/aigera/Documents/CS5099/literature review/papers/games/Nanogram{\_}solving{\_}algorithms{\_}analysis{\_}and{\_}implementation{\_}for{\_}augmented{\_}reality{\_}system.pdf:pdf},
pages = {54},
title = {{Nonogram solving algorithms analysis and implementation for augmented reality system Nonogram solving algorithms analysis and implementation for augmented reality system}},
url = {http://vddb.library.lt/fedora/get/LT-eLABa-0001:E.02{~}2012{~}D{\_}20131104{\_}111220-04913/DS.005.1.01.ETD},
year = {2012}
}
@article{Goldner,
author = {Goldner, Kira and Kimura, Ryo and Schwartz, Ari},
file = {:Users/aigera/Documents/CS5099/literature review/papers/games/Nonokenken- Solving Puzzles Using Integer Programs.pdf:pdf},
number = {65},
title = {{Nonokenken : Solving Puzzles Using Integer Programs Solving Nonograms using IP Defining the Nonogram}}
}
@article{Szeredi,
abstract = {The paper describes the experiences of teaching a constraint logic programming course at the Budapest University of Technology and Economics. We describe the structure of the course, the material covered, some examples, assignments, and examination tasks. Throughout the paper we show how logic puzzles can be used to illustrate constraint programming techniques.},
author = {Szeredi, P{\'{e}}ter},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Szeredi - Unknown - LNAI 3010 - Teaching Constraints through Logic Puzzles.pdf:pdf},
title = {{LNAI 3010 - Teaching Constraints through Logic Puzzles}},
url = {http://download.springer.com/static/pdf/842/chp{\%}253A10.1007{\%}252F978-3-540-24662-6{\_}11.pdf?originUrl=http{\%}3A{\%}2F{\%}2Flink.springer.com{\%}2Fchapter{\%}2F10.1007{\%}2F978-3-540-24662-6{\_}11{\&}token2=exp=1496346213{~}acl={\%}2Fstatic{\%}2Fpdf{\%}2F842{\%}2Fchp{\%}25253A10.1007{\%}25252F978-3-540-24662-6{\_}11.pdf{\%}3ForiginUrl{\%}3Dhttp{\%}253A{\%}252F{\%}252Flink.springer.com{\%}252Fchapter{\%}252F10.1007{\%}252F978-3-540-24662-6{\_}11*{~}hmac=71e7dd17b0b1d4106a4018643de9bcc46166ce2f4535e603f448d6c2790f3ad9}
}
@article{Rossi2006,
author = {Rossi, F and Beek, P Van and Walsh, T},
file = {:Users/aigera/Documents/CS5099/literature review/books/CP{\_}Handbook-20060315-final.pdf:pdf},
isbn = {0444527265},
issn = {0444527265},
pages = {281--322},
title = {{Handbook of Constraint Programming (Foundations of Artificial Intelligence)}},
year = {2006}
}
@book{Detcher1975,
author = {Detcher, Rina},
booktitle = {Lecture Notes in Computer Science},
file = {:Users/aigera/Documents/CS5099/literature review/books/[Rina{\_}Dechter]{\_}Principles{\_}and{\_}Practice{\_}of{\_}Constrai(BookZZ.org).pdf:pdf},
isbn = {3540410538},
title = {{Lecture Notes in Computer Science}},
url = {http://www.ulb.tu-darmstadt.de/tocs/59142804.pdf},
year = {1975}
}
@article{Nightingale,
abstract = {When solving a problem using constraint programming, constraint modelling is widely acknowledged as an important and difficult task. Even a constraint modelling expert may explore many models and spend considerable time modelling a single problem. Therefore any automated assistance in the area of constraint modelling is valuable. Common sub-expression elimination (CSE) is a type of constraint reformulation that has proved to be useful on a range of problems. In this paper we demonstrate the value of an extension of CSE called Associative-Commutative CSE (AC-CSE). This technique exploits the proper-ties of associativity and commutativity of binary operators, for example in sum constraints. We present a new algorithm, X-CSE, that is able to choose from a larger palette of common subexpressions than previous approaches. We demon-strate substantial gains in performance using X-CSE. For example on BIBD we observed speed increases of more than 20 times compared to a standard model and that using X-CSE outperforms a sophisticated model from the literature. For Killer Sudoku we found that X-CSE can render some apparently difficult in-stances almost trivial to solve, and we observe speed increases up to 350 times. For BIBD and Killer Sudoku the common subexpressions are not present in the initial model: an important part of our methodology is reformulations at the pre-processing stage, to create the common subexpressions for X-CSE to exploit. In summary we show that X-CSE, combined with preprocessing and other reformu-lations, is a powerful technique for automated modelling of problems containing associative and commutative constraints.},
author = {Nightingale, Peter and Akg{\"{u}}n, Ozg{\"{u}}r and Gent, Ian P and Jefferson, Christopher and Miguel, Ian},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Nightingale et al. - Unknown - LNCS 8656 - Automatically Improving Constraint Models in Savile Row through Associative-Commutative Commo.pdf:pdf},
title = {{LNCS 8656 - Automatically Improving Constraint Models in Savile Row through Associative-Commutative Common Subexpression Elimination}},
url = {http://download.springer.com/static/pdf/221/chp{\%}253A10.1007{\%}252F978-3-319-10428-7{\_}43.pdf?originUrl=http{\%}3A{\%}2F{\%}2Flink.springer.com{\%}2Fchapter{\%}2F10.1007{\%}2F978-3-319-10428-7{\_}43{\&}token2=exp=1496344399{~}acl={\%}2Fstatic{\%}2Fpdf{\%}2F221{\%}2Fchp{\%}25253A10.1007{\%}25252F978-3-319-10428-7{\_}43.pdf{\%}3ForiginUrl{\%}3Dhttp{\%}253A{\%}252F{\%}252Flink.springer.com{\%}252Fchapter{\%}252F10.1007{\%}252F978-3-319-10428-7{\_}43*{~}hmac=a819f5ce8e51dcca5677ea0c54881db85c04e3cd0b9f29f6fb0cf499f3a0a7c1}
}
@article{Rossi,
author = {Rossi, F and {Van Beek}, P and Elsevier, T Walsh},
file = {:Users/aigera/Documents/CS5099/literature review/books/CP{\_}Handbook-20060315-final.pdf:pdf},
title = {{Handbook of Constraint Programming}},
url = {http://cswww.essex.ac.uk/CSP/papers/CP{\_}Handbook-20060315-final.pdf}
}
@book{Apt2003,
abstract = {Methods to solve constraint problems (e.g. scheduling) rely on the idea of constraint propagation and search. Using constraint techniques in programming environments has accelerated the solution process, combining ideas from artificial intelligence, programming languages, databases, and operational research. This text is a modern, multidisciplinary introduction covering both foundations and applications. Cover; Title; Copyright; Dedication; Contents; Acknowledgements; 1 Introduction; 2 Constraint satisfaction problems: examples; 3 Constraint programming in a nutshell; 4 Some complete constraint solvers; 5 Local consistency notions; 6 Some incomplete constraint solvers; 7 Constraint propagation algorithms; 8 Search; 9 Issues in constraint programming; Bibliography; Author index; Subject index.},
author = {Apt, Krzysztof R.},
file = {:Users/aigera/Documents/CS5099/literature review/books/[Krzysztof{\_}Apt]{\_}Principles{\_}of{\_}Constraint{\_}Programmi(BookZZ.org).pdf:pdf},
isbn = {0521825830},
keywords = {file:///Users/aigera/Documents/CS5099/literature r},
pages = {407},
publisher = {Cambridge University Press},
title = {{Principles of constraint programming}},
url = {https://books.google.co.uk/books?hl=en{\&}lr={\&}id=1e7Ib04fZAcC{\&}oi=fnd{\&}pg=PR11{\&}dq=principles+of+constraint+programming+apt+2003{\&}ots=DTYRQu3GoG{\&}sig=psJ5ULL17cq4cHTImYG-lkU0qrI{\#}v=onepage{\&}q=principles of constraint programming apt 2003{\&}f=false},
year = {2003}
}
@article{Apt2003a,
abstract = {Scheduling, vehicle routing and timetabling are all examples of constraint problems, and methods to solve them rely on the idea of constraint propagation and search. This book meets the need for a modern, multidisciplinary introduction to the field that covers foundations and applications. Written by Krzysztof Apt, an authority on the subject, it will be welcomed by graduate students and professionals. With the insertion of constraint techniques into programming environments, new developments have accelerated the solution process. Constraint programming combines ideas from artificial intelligence, programming languages, databases, and operational research. Constraints are everywhere: most computational problems can be described in terms of restrictions imposed on the set of possible solutions, and constraint programming is a problem-solving technique that works by incorporating those restrictions in a programming environment. It draws on methods from combinatorial optimization and artificial intelligence, and has been successfully applied in a number of fields from scheduling, computational biology, finance, electrical engineering and operations research through to numerical analysis. This textbook for upper-division students provides a thorough and structured account of the main aspects of constraint programming. The author provides many worked examples that illustrate the usefulness and versatility of this approach to programming, as well as many exercises throughout the book that illustrate techniques, test skills and extend the text. Pointers to current research, extensive historical and bibliographic notes, and a comprehensive list of references will also be valuable to professionals in computer science and artificial intelligence.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Apt, Krzysztof R},
doi = {10.2277/0521825830},
eprint = {arXiv:1011.1669v3},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Apt - 2003 - Principles of Constraint Programming.pdf:pdf},
isbn = {0521825830},
issn = {1098-6596},
journal = {Annals of Physics},
pages = {420},
pmid = {25246403},
title = {{Principles of Constraint Programming}},
url = {http://books.google.pt/books?id=1e7Ib04fZAcC{\%}5Cnhttp://books.google.com/books?hl=en{\&}lr={\&}id=1e7Ib04fZAcC{\&}oi=fnd{\&}pg=PR11{\&}dq=Principles+of+constraint+programming{\&}ots=DSTROv6GhB{\&}sig=0YtJALBjQjmdXSRXnrSc16Ler7E{\%}5Cnhttp://books.google.com/books?hl=en{\&}lr={\&}id=1e7},
year = {2003}
}
@misc{Miguel2015,
author = {Miguel, Ian and Prosser, Patrick},
title = {{What problems will AI solve in future? An old British gameshow can help explain}},
url = {http://theconversation.com/what-problems-will-ai-solve-in-future-an-old-british-gameshow-can-help-explain-49080},
urldate = {2017-06-01},
year = {2015}
}
@article{Park2004,
author = {Park, Vincent},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Park - 2004 - AN EMPIRICAL STUDY OF DIFFERENT BRANCHING STRATEGIES FOR CONSTRAINT SATISFACTION PROBLEMS.pdf:pdf},
title = {{AN EMPIRICAL STUDY OF DIFFERENT BRANCHING STRATEGIES FOR CONSTRAINT SATISFACTION PROBLEMS}},
url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.3.7341{\&}rep=rep1{\&}type=pdf},
year = {2004}
}
@book{Dechter2003,
abstract = {Constraint satisfaction is a simple but powerful tool. Constraints identify the impossible and reduce the realm of possibilities to effectively focus on the possible, allowing for a natural declarative formulation of what must be satisfied, without expressing how. The field of constraint reasoning has matured over the last three decades with contributions from a diverse community of researchers in artificial intelligence, databases and programming languages, operations research, management science, and applied mathematics. Today, constraint problems are used to model cognitive tasks in vision, language comprehension, default reasoning, diagnosis, scheduling, temporal and spatial reasoning. In Constraint Processing, Rina Dechter, synthesizes these contributions, along with her own significant work, to provide the first comprehensive examination of the theory that underlies constraint processing algorithms. Throughout, she focuses on fundamental tools and principles, emphasizing the representation and analysis of algorithms. Examines the basic practical aspects of each topic and then tackles more advanced issues, including current research challenges Builds the reader's understanding with definitions, examples, theory, algorithms and complexity analysis Synthesizes three decades of researchers work on constraint processing in AI, databases and programming languages, operations research, management science, and applied mathematics. Preface; Introduction; Constraint Networks; Consistency-Enforcing Algorithms: Constraint Propagation; Directional Consistency; General Search Strategies; General Search Strategies: Look-Back; Local Search Algorithms; Advanced Consistency Methods; Tree-Decomposition Methods; Hybrid of Search and Inference: Time-Space Trade-offs; Tractable Constraint Languages; Temporal Constraint Networks; Constraint Optimization; Probabilistic Networks; Constraint Logic Programming; Bibliography.},
author = {Dechter, Rina},
isbn = {1558608907},
pages = {481},
publisher = {Morgan Kaufmann Publishers},
title = {{Constraint processing}},
year = {2003}
}
@article{Description,
author = {Description, E Ssence and Nightingale, Peter and Rendl, Andrea},
file = {:Users/aigera/Desktop/Constraint Programming/savilerow-1.6.4-mac/essence-prime-description.pdf:pdf},
pages = {1--19},
title = {{Description 1.6.4}}
}
@article{Manual,
author = {Manual, S Avile R O W and Nightingale, Peter},
file = {:Users/aigera/Desktop/Constraint Programming/savilerow-1.6.4-mac/savilerow-manual.pdf:pdf},
pages = {1--9},
title = {{Manual 1.6.4}}
}
@article{Schulte2013,
author = {Schulte, Christian},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Schulte - 2013 - Principles and Practice of Constraint Programming(2).pdf:pdf},
title = {{Principles and Practice of Constraint Programming}},
url = {http://download.springer.com/static/pdf/594/bok{\%}253A978-3-642-40627-0.pdf?originUrl=http{\%}3A{\%}2F{\%}2Flink.springer.com{\%}2Fbook{\%}2F10.1007{\%}2F978-3-642-40627-0{\&}token2=exp=1496338490{~}acl={\%}2Fstatic{\%}2Fpdf{\%}2F594{\%}2Fbok{\%}25253A978-3-642-40627-0.pdf{\%}3ForiginUrl{\%}3Dhttp{\%}253A{\%}252F{\%}252Flink.springer.com{\%}252Fbook{\%}252F10.1007{\%}252F978-3-642-40627-0*{~}hmac=57c2cb9ac5786f9cf34c1b999e5c83ceb2f9940eaee435a704a1f8d5b7fcc5cc},
year = {2013}
}
@inproceedings{Simonis2009,
author = {Simonis, Helmut},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Simonis, Simonis Shikaku - Unknown - Shikaku as a Constraint Problem.pdf:pdf},
title = {{Shikaku as a Constraint Problem}},
url = {http://www.4c.ucc.ie/{~}hsimonis/shikaku{\_}slides.pdf},
year = {2009}
}
@article{Jefferson2011,
abstract = {Constraint Programming offers a powerful means of solving a wide variety of combinatorial problems. We have used this powerful paradigm to create a successful computer game called Combination. Combination is an application for the iPhone and iPod touch. It has been on sale internationally through the iTunes store since December, 2008 and received a number of positive reviews. In this paper we explain how all the levels of Combination were generated, checked for correctness and rated for difficulty completely automatically through the use of constraints. We go on to evaluate this method of creation with the use of a human evaluation. This showed that fun, immersing computer games can be created with constraint programming.},
author = {Jefferson, Christopher and Moncur, Wendy and Petrie, Ke},
doi = {10.1145/1982185.1982383},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Jefferson, Moncur, Petrie - 2011 - Combination Automated generation of puzzles with constraints.pdf:pdf},
isbn = {9781450301138},
journal = {{\ldots} of the 2011 ACM Symposium on {\ldots}},
pages = {907--912},
title = {{Combination: Automated generation of puzzles with constraints}},
url = {http://dl.acm.org/citation.cfm?id=1982383},
year = {2011}
}
@article{Jefferson,
abstract = {Constraint Programming offers a powerful means of solving a wide variety of combinatorial problems. We have used this powerful paradigm to create a successful computer game called Combina-tion. Combination is an application for the iPhone and iPod touch. It has been on sale internationally through the iTunes store 1 since December, 2008 and received a number of positive reviews. In this paper we explain how all the levels of Combination were generated, checked for correctness and rated for difficulty com-pletely automatically through the use of constraints. We go on to evaluate this method of creation with the use of a human evalu-ation. This showed that fun, immersing computer games can be created with constraint programming.},
author = {Jefferson, Christopher and Moncur, Wendy and Petrie, Karen E},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Jefferson, Moncur, Petrie - Unknown - Combination Automated Generation of Puzzles with Constraints.pdf:pdf},
title = {{Combination: Automated Generation of Puzzles with Constraints}},
url = {http://delivery.acm.org/10.1145/1990000/1982383/p907-jefferson.pdf?ip=138.251.255.115{\&}id=1982383{\&}acc=ACTIVE SERVICE{\&}key=C2D842D97AC95F7A.9A2EB7BEEEBA61C5.4D4702B0C3E38B35.4D4702B0C3E38B35{\&}CFID=769024903{\&}CFTOKEN=99309921{\&}{\_}{\_}acm{\_}{\_}=1496335820{\_}8390aa5e429b60df494ae654d22342ac}
}
%-------------------------------------------------------------------------------------------
%-------------------------------------------------------------------------------------------
@misc{Handbook3:online,
author = {},
title = {Handbook.dvi},
howpublished = {\url{http://cswww.essex.ac.uk/CSP/papers/CP_Handbook-20060315-final.pdf}},
month = {},
year = {},
note = {(Accessed on 08/12/2017)}
}
@article{Nightingale,
abstract = {When solving a problem using constraint programming, constraint modelling is widely acknowledged as an important and difficult task. Even a constraint modelling expert may explore many models and spend considerable time modelling a single problem. Therefore any automated assistance in the area of constraint modelling is valuable. Common sub-expression elimination (CSE) is a type of constraint reformulation that has proved to be useful on a range of problems. In this paper we demonstrate the value of an extension of CSE called Associative-Commutative CSE (AC-CSE). This technique exploits the proper-ties of associativity and commutativity of binary operators, for example in sum constraints. We present a new algorithm, X-CSE, that is able to choose from a larger palette of common subexpressions than previous approaches. We demon-strate substantial gains in performance using X-CSE. For example on BIBD we observed speed increases of more than 20 times compared to a standard model and that using X-CSE outperforms a sophisticated model from the literature. For Killer Sudoku we found that X-CSE can render some apparently difficult in-stances almost trivial to solve, and we observe speed increases up to 350 times. For BIBD and Killer Sudoku the common subexpressions are not present in the initial model: an important part of our methodology is reformulations at the pre-processing stage, to create the common subexpressions for X-CSE to exploit. In summary we show that X-CSE, combined with preprocessing and other reformu-lations, is a powerful technique for automated modelling of problems containing associative and commutative constraints.},
author = {Nightingale, Peter and Akg{\"{u}}n, Ozg{\"{u}}r and Gent, Ian P and Jefferson, Christopher and Miguel, Ian},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Nightingale et al. - Unknown - LNCS 8656 - Automatically Improving Constraint Models in Savile Row through Associative-Commutative Commo.pdf:pdf},
title = {{LNCS 8656 - Automatically Improving Constraint Models in Savile Row through Associative-Commutative Common Subexpression Elimination}},
url = {http://download.springer.com/static/pdf/221/chp{\%}253A10.1007{\%}252F978-3-319-10428-7{\_}43.pdf?originUrl=http{\%}3A{\%}2F{\%}2Flink.springer.com{\%}2Fchapter{\%}2F10.1007{\%}2F978-3-319-10428-7{\_}43{\&}token2=exp=1496344399{~}acl={\%}2Fstatic{\%}2Fpdf{\%}2F221{\%}2Fchp{\%}25253A10.1007{\%}25252F978-3-31}
}
@article{Dandurand,
abstract = {We study solvers of nonogram puzzles, which are good examples of constraint-satisfaction problems. Given an optimal solving module for solving a given line, we compare performance of three algorithmic solvers used to select the order in which to solve lines with a reinforcement-learning-based solver. The reinforcement-learning (RL) solver uses a measure of reduction of distance to goal as a reward. We compare two methods for storing qualities (Q values) of state-action pairs, a lookup table and a connectionist function approximator. We find that RL solvers learn near-optimal solutions that also outperform a heuristic solver based on the explicit, general rules often given to nonogram players. Only RL solvers that use a connectionist function approximator generalize their knowledge to generate good solutions on about half of unseen problems; RL solvers based on lookup tables generalize to none of these untrained problems.},
author = {Dandurand, Fr{\'{e}}d{\'{e}}ric and Cousineau, Denis and Shultz, Thomas R},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Dandurand, Cousineau, Shultz - Unknown - Solving nonogram puzzles by reinforcement learning.pdf:pdf},
keywords = {Nonograms,SDCC,distance-based reward,problem solving,reinforcement learning},
title = {{Solving nonogram puzzles by reinforcement learning}},
url = {https://mindmodeling.org/cogsci2012/papers/0258/paper0258.pdf}
}
@article{HelmutSimonis2005,
abstract = {Constraint programming has finally reached the masses, thou- sands of newspaper readers (especially in the UK) are solving their daily constraint problem. They apply complex propagation schemes with names like âX-Wingâ and âSwordfishâ to find solutions of a rather simple looking puzzle called Sudoku. Unfortunately, they are not aware that this is constraint programming. In this paper we try to understand the puzzle from a constraint point of view, show models to solve and generate puz- zles and give an objective measure of the difficulty of a puzzle instance. This measure seems to correlate well with grades (e.g. easy to hard) that are assigned to problem instances for the general public. We also show how the model can be strengthened with redundant constraints and how these can be implemented using bipartite matching and flow algorithms.
1},
author = {{Helmut Simonis}},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Helmut Simonis - 2005 - Sudoku as a Constraint Problem.pdf:pdf},
journal = {Fourth International Workshop Sitges},
pages = {13-- 27},
title = {{Sudoku as a Constraint Problem}},
url = {https://pdfs.semanticscholar.org/b5f8/380bb6149ec2f4e5bf4f5ab7551ca9b3c37b.pdf{\#}page=21},
year = {2005}
}
@article{Michel,
author = {Michel, Laurent},
file = {:Users/aigera/Library/Application Support/Mendeley Desktop/Downloaded/Michel - Unknown - Integration of AI and OR Techniques in Constraint Programming.pdf:pdf},
title = {{Integration of AI and OR Techniques in Constraint Programming}},
url = {https://link.springer.com/content/pdf/10.1007{\%}2F978-3-319-18008-3.pdf}
}

