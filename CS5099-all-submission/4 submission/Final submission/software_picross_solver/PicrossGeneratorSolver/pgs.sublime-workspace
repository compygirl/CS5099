{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"list",
				"list_clues"
			],
			[
				"dis",
				"display_instance"
			],
			[
				"to",
				"total_amount_cells"
			],
			[
				"solut",
				"solution_board"
			],
			[
				"left",
				"left_matrix"
			],
			[
				"top",
				"top_matrix"
			],
			[
				"lef",
				"left_matrix"
			],
			[
				"table",
				"table_vals"
			],
			[
				"info",
				"info_dict"
			],
			[
				"tota",
				"total_amount_of_instances"
			],
			[
				"cou",
				"coloured_cells"
			],
			[
				"soli",
				"solution_board"
			],
			[
				"num",
				"num_sols"
			],
			[
				"temp",
				"temp_dict"
			],
			[
				"write",
				"writerow"
			],
			[
				"sol",
				"solution_processor"
			],
			[
				"count",
				"counter_diff"
			],
			[
				"image",
				"image_directory"
			],
			[
				"print",
				"print_matrix"
			],
			[
				"compare",
				"compare_all_boards"
			],
			[
				"orig",
				"orig_solution_board"
			],
			[
				"difference",
				"difference_m"
			],
			[
				"get",
				"get_all_sol_boards"
			],
			[
				"upda",
				"updated_sol_board"
			],
			[
				"solu",
				"solution_board"
			],
			[
				"param",
				"param_filename"
			],
			[
				"img",
				"img_list"
			]
		]
	},
	"buffers":
	[
		{
			"file": "tester.py",
			"settings":
			{
				"buffer_size": 31532,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "PLAN OF WRITING:\n\nABSTRACT\n\tconstraint programming for combinatorial games == puzzle games!!!\n\twhat was done in this project?  \n\t\t1. CP was used as a solver of NANOGRAM\n\t\t2. all levels of the game generated -> after analysis\n\t\t3. checeking for correctness(solvable) and rate of the difficulty\n\t\t\ttiming \n\t\t\tsize\n\t\t\tnumber of coloured elements\n\nDeclaration:\n\nI declare that the material submitted for assessment is my own work except where\ncredit is explicitly given to others by citation or acknowledgement. This work was\nperformed during the current academic year except where otherwise stated. The\nmain text of this project report is ...... words long, including project specification\nand plan. In submitting this project report to the University of St Andrews, I give\npermission for it to be made available for use in accordance with the regulations of\nthe University Library. I also give permission for the report to be made available on\nthe Web, for this work to be used in research within the University of St Andrews,\nand for any software to be released on an open source basis. I retain the copyright in\nthis work, and ownership of any resulting intellectual property.\n\nIntroduction:\nNanogram \n\t\t\n\t\t- about the Constraint programming and the all rules using it\n\t\t- NP - complete, checking and solving the problem, how long it takes?\n\n\t\t\"Combination: chess based problem ----> is nanogram related to the chess based problem??? they talks about the rules of the game\"\n\t\t\"1.levels are generated by using constraint programming\"\n\t\t\"2.difficulty is also graded by the CP\"n\n\t\tCartesian product? \n\t\tThe solvable - means that the user could solve without ribbing off the coloured things, --- > THEY MUST BE SOLVABLE WITHOUT IT <---- PURE REASONABLE GAMES\n\n\t\tProblems with symmetry? -- something about the Crawford ordering constraints\n\n\t\t4. Eval diff of levels\n\t\t50 times through the same game and check the time and get the arverage timing\n\t\tcomare the nodes of each level\n\t\tcollection of IMPLIED CONSTRAINTS\n\n\t\t5. database of random instances !!! 1. has one solution\n\t\t\t\t\t\t\t\t\t\t!!! 2. has no solutions\n\t\t\t\t\t\t\t\t\t\t!!!+++ USE LOCAL SEARCH \n\t\t\t\t\t\t\t\t\t\t!!! +++ we put to the DB with the level of difficulty\n\t\t\t\t\t\t\t\t\t\t!!! +++ symmetry breaking to the grid or piece\n\t\t\t\t\t\t\t\t\t\tFinding the hardest instances by incrementing the number of cells in the grid??\n\n\t\t\t5.1 adding some filterings like long lines of walls\n\t\t\t\n\n\n\n\n\n\n\n",
			"file": "PLAN OF WRITING",
			"file_size": 2415,
			"file_write_time": 131461779070000000,
			"settings":
			{
				"buffer_size": 2416,
				"line_ending": "Unix"
			}
		},
		{
			"file": "board_generator.py",
			"settings":
			{
				"buffer_size": 1470,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 169 files for \"get_stat_about_solution_board\"\n\n/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/game_analyser.py:\n   78  \n   79  \n   80: def get_stat_about_solution_board(solution_board, id, steps):\n   81      count_coloured = 0\n   82      info_dict['Rows'] = len(solution_board)\n\n/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/tester.py:\n   57                  execute_savileRow(EPRIME_FILE, param_directory, param_filename)\n   58                  get_info_from_file(param_directory, param_filename)\n   59:                 get_stat_about_solution_board(solution_board)\n   60                  print_info_from_file(param_directory, param_filename)\n   61                  stat_directory = STAT_DIR\n   ..\n  172              execute_savileRow(EPRIME_FILE, param_directory, param_filename)\n  173              get_info_from_file(param_directory, param_filename)\n  174:             get_stat_about_solution_board(random_sol_board)\n  175              num_sols = get_num_solutions(param_directory, param_filename, random_sol_board)\n  176              print \"SOLUTIONS\", num_sols\n  ...\n  300              execute_savileRow(EPRIME_FILE, param_directory, param_filename)\n  301              get_info_from_file(param_directory, param_filename)\n  302:             get_stat_about_solution_board(fixed_sol_board, id, steps)\n  303              num_sols = get_num_solutions(param_directory, param_filename, fixed_sol_board)\n  304              print \"SOLUTIONS\", num_sols\n  ...\n  388              execute_savileRow(EPRIME_FILE, param_directory, param_filename)\n  389              get_info_from_file(param_directory, param_filename)\n  390:             get_stat_about_solution_board(fixed_sol_board, id, steps)\n  391              num_sols = get_num_solutions(param_directory, param_filename, fixed_sol_board)\n  392              print \"SOLUTIONS\", num_sols\n  ...\n  485          execute_savileRow(EPRIME_FILE, param_directory, param_filename)\n  486          get_info_from_file(param_directory, param_filename)\n  487:         get_stat_about_solution_board(fixed_sol_board, id, 0)\n  488          num_sols = get_num_solutions(param_directory, param_filename, fixed_sol_board)\n  489          print \"SOLUTIONS\", num_sols\n\n6 matches across 2 files\n\n\nSearching 91 files for \"display_instance\"\n\n/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/instance_generator.py:\n  136  \n  137  \n  138: def display_instance(solution_board, title):\n  139      left_matrix, num_clues_cols = transform_left_matrix(solution_board)\n  140      top_matrix, num_clues_rows = transform_top_matrix(solution_board)\n\n/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/tester.py:\n  629          some_mat, num = transform_left_matrix(random_sol_board)\n  630          print_matrix(some_mat)\n  631:         display_instance(random_sol_board)\n  632      elif option == 7:\n  633          while True:\n  ...\n  655                  if many_clue_index == small_amount_clues_index:\n  656                      print \"This case has all the cases are the same!\"\n  657:                     display_instance(list_of_boards[many_clue_index], \"probably the same!\")\n  658                  else:\n  659                      easy_title = \"EASY (size: \" + str(rows) + \" \" + str(columns) + \" coloured: \" + str(propotion) + \"%)\"\n  660                      hard_title = \"HARD (size: \" + str(rows) + \" \" + str(columns) + \" coloured: \" + str(propotion) + \"%)\"\n  661  \n  662:                     display_instance(list_of_boards[small_amount_clues_index], easy_title)\n  663:                     display_instance(list_of_boards[many_clue_index], hard_title)\n  664                  print \"many_index: \", many_clue_index\n  665                  print \"small_index: \", small_amount_clues_index\n\n5 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 3785,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "game_analyser.py",
			"settings":
			{
				"buffer_size": 5893,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "display_game.py",
			"settings":
			{
				"buffer_size": 8771,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "instance_generator.py",
			"settings":
			{
				"buffer_size": 10170,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "constants.py",
			"settings":
			{
				"buffer_size": 485,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 187.0,
		"last_filter": "upp",
		"selected_items":
		[
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"lowe",
				"Convert Case: Lower Case"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"list pac",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			]
		],
		"width": 462.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/image_instances",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/stat_data"
	],
	"file_history":
	[
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/instance_generator.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/participants8.param.infor",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/participants9.param.info",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/single_solution.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/board_generator.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/game_analyser.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/PLAN OF WRITING",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/solution_processor.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/matrix_processor.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/image_processor.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/tester.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/display_game.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/fixed0.param",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/stat_data/constInfoFile.csv",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/file_manager.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/fixed12.param.solution.000001",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/fixed14.param.info",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/constants.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/stat_data/infoFile5.csv",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/myfile.csv",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/pgs.sublime-project",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/Secondjpg.param",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/Secondjpg.param.solution.000002",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/random1.param",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/picross_solver.eprime",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/Secondjpg.param.solution.000001",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/untitled.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/untitled1.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/random2.param",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/updated_Secondjpg.param",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/untitled2.py",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/random5.param",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/permanent_examples/random0.param.solution.000001",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/param_files/updated_Secondjpg.param.solution.000001",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/random_generator.py",
		"/Users/aigera/Desktop/CS5099/Ruby_solution_to_image/solution_to_image.rb",
		"/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver/.sublime-project",
		"/Users/aigera/Documents/GitHub/CS5099/.gitignore",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/tester.py",
		"/Users/aigera/Desktop/CS5099/PicrossGeneratorSolver/longExample.txt",
		"/Users/aigera/Desktop/CS5099/PicrossGeneratorSolver/randomInstances/random0.param.info",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/image_processor.py",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/single_solution.py",
		"/Users/aigera/Desktop/CS5099/PicrossGeneratorSolver/permanent_examples/random0.param",
		"/Users/aigera/Desktop/CS5099/PicrossGeneratorSolver/test.py",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/game_analyser.py",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/file_manager.py",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/constants.py",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/matrix_processor.py",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/instance_generator.py",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/demo1.sublime-project",
		"/Users/aigera/Desktop/CS5099/Demo1_instance_generator/random_generator.py"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 132.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"display_instance",
			"test_rand_with_two_sols",
			"steps",
			"STEPS",
			"steps",
			"get_stat_about_solution_board",
			"count_num_coloured_cells",
			"get_stat_about_solution_board",
			"test_fixed_boards",
			"*",
			"+",
			"=",
			"count_average_of_clues",
			"plt",
			"figure",
			"find_smallest_clue",
			"find_largest_clue",
			"visualise_board",
			"seed",
			"compare_all_solutions",
			"show()",
			"promnt_cofloured_cells",
			"banana",
			"final",
			"transformed_top_matrix",
			"matrix2",
			"matrix",
			"=plt",
			"=",
			"seed",
			"table_vals",
			"matrix",
			"display_instance",
			"solution_board",
			"colwidth",
			"create_top_matrix",
			"axes",
			"False",
			"plt",
			"rows",
			"Rows",
			"rows",
			"id",
			"get_stat_about_solution_board",
			"info_dict",
			"csv",
			"num_sols",
			"get_num_solutions",
			"get_number",
			"put_into_dictionary",
			")\n",
			"put_into_dictionary",
			"put_into",
			"random_sol_board",
			"diff_matrix",
			"visualise_board",
			"random_generator",
			"image",
			"delete_unneded_files",
			"\"infoFile.csv\"",
			"csvfile2",
			"#",
			"total_drids",
			"count_num_solution",
			"temp",
			"print_info",
			"get_info",
			"list",
			"compare_all_boards",
			"list",
			"LIST",
			"solution_board",
			"coopy_rand_sol_board",
			"counter",
			"count",
			"visualise_board",
			"⏹",
			"random_sol_board",
			"coopy_rand_sol_board",
			"random_sol_board",
			"compare_two_solutions",
			"info_dict",
			"visualise_board",
			"            #  get needed information from the '.info' file\nprint_solution_board",
			"print_solution_board",
			"compare_two_solutions",
			"update_sol_board",
			"solutionBoard",
			"delete_unneded_files",
			"print_solution_board",
			"param_filename",
			"orig_sol_board",
			"count",
			"updated_sol_board",
			"count",
			"70",
			"72",
			"76",
			"EPRIME_FILE",
			"EPRIME",
			"get_single_sol_instance",
			"update_instances",
			"get_single_sol_instance",
			"60",
			"param_filename",
			"eprime_filename",
			"image_filename",
			"convert_matrix_to_print_version",
			"convert_matrix_to_s",
			"convert_matrix_to_print_version"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"visualise_board"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "tester.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31532,
						"regions":
						{
						},
						"selection":
						[
							[
								29297,
								29297
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13269.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "PLAN OF WRITING",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2416,
						"regions":
						{
						},
						"selection":
						[
							[
								1575,
								1575
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 741.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "board_generator.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1470,
						"regions":
						{
						},
						"selection":
						[
							[
								649,
								649
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 149.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3785,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										163,
										192
									],
									[
										560,
										589
									],
									[
										911,
										940
									],
									[
										1284,
										1313
									],
									[
										1666,
										1695
									],
									[
										2036,
										2065
									],
									[
										2409,
										2425
									],
									[
										2803,
										2819
									],
									[
										3075,
										3091
									],
									[
										3467,
										3483
									],
									[
										3565,
										3581
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								183,
								183
							]
						],
						"settings":
						{
							"default_dir": "/Users/aigera/Documents/GitHub/CS5099/PicrossGeneratorSolver",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "tester.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31532,
						"regions":
						{
						},
						"selection":
						[
							[
								7782,
								7782
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2829.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "game_analyser.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5893,
						"regions":
						{
						},
						"selection":
						[
							[
								3711,
								3711
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 793.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "display_game.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8771,
						"regions":
						{
						},
						"selection":
						[
							[
								3023,
								3039
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"file": "image_instances/flower.jpg",
					"semi_transient": true,
					"stack_index": 1,
					"type": "image"
				},
				{
					"buffer": 6,
					"file": "instance_generator.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10170,
						"regions":
						{
						},
						"selection":
						[
							[
								9676,
								9681
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3764.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "constants.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 485,
						"regions":
						{
						},
						"selection":
						[
							[
								467,
								483
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 58.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.729500364127,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 294.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 114.0
	},
	"pinned_build_system": "",
	"project": "pgs.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"instance",
				"instance_generator.py"
			],
			[
				"const",
				"constants.py"
			],
			[
				"game",
				"game_analyser.py"
			],
			[
				"test",
				"tester.py"
			],
			[
				"matrix",
				"matrix_processor.py"
			],
			[
				"sing",
				"single_solution.py"
			],
			[
				"image",
				"image_processor.py"
			],
			[
				"",
				"board_generator.py"
			],
			[
				"ons",
				"constants.py"
			],
			[
				"con",
				"constants.py"
			],
			[
				"solution",
				"solution_processor.py"
			],
			[
				"matri",
				"matrix_processor.py"
			],
			[
				"cp",
				"constants.py"
			],
			[
				"tes",
				"tester.py"
			],
			[
				"file",
				"file_manager.py"
			],
			[
				"text",
				"permanent_examples/random0.param.solution.000001"
			],
			[
				"single",
				"single_solution.py"
			],
			[
				"cons",
				"constants.py"
			],
			[
				"random",
				"random_generator.py"
			],
			[
				"instan",
				"instance_generator.py"
			],
			[
				"projec",
				".sublime-project"
			],
			[
				"gane",
				"Demo1_instance_generator/game_analyser.py"
			],
			[
				"im",
				"image_processor.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/GitHub/CS5099/PicrossGeneratorSolver/pgs.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 261.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
