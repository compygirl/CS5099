package savilerow;

import java.util.*;

import edu.jas.arith.*;
import edu.jas.poly.*;
import edu.jas.ufd.*;

public final class TestCAS {
    
  /* ====================================================================
     main for testing
    ==================================================================== */ 
    public static void main(String[] args) {
        
        BigInteger fac = new BigInteger();
	    
	    int numvars=4;
	    
        String[] var = new String[]{ "a", "b", "c", "d"};
        
        //TermOrder tord = new TermOrder(TermOrder.INVLEX);
        
        GenPolynomialRing<BigInteger> ring = new GenPolynomialRing<BigInteger>(fac,var);
        
        ArrayList<GenPolynomial<BigInteger>> vars=new ArrayList<GenPolynomial<BigInteger>>();
        
        for(int i=0; i<numvars; i++) vars.add(ring.univariate(i));
        
        // Build up the polynomial from vars.
        
        // Silly demo one first. 
        //  ab+ac+db+dc   ->  (a+d)(b+c)
        
	    GenPolynomial<BigInteger> tmp=( vars.get(0).multiply(vars.get(1)) ).sum( vars.get(0).multiply(vars.get(2)) )
	    .sum( vars.get(3).multiply(vars.get(1)) ).sum( vars.get(3).multiply(vars.get(2)) );
	    
	    System.out.println(ring);
	    System.out.println(tmp);
	    
	    Factorization<BigInteger> engine = FactorFactory.getImplementation(fac);
        SortedMap<GenPolynomial<BigInteger>,Long> factors = engine.factors(tmp);
	    
        System.out.println(factors);
    }
}
